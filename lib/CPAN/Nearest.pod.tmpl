[% start_year=2012 %]
[% MACRO example(file) BLOCK %]
[%- pl = file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

produces output

[% INCLUDE $out | xtidy %]

(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/[% info.name %]-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
=head1 NAME

[% info.colon %] - find the nearest module to a given name.

=head1 SYNOPSIS

[% example("synopsis") %]

=head1 VERSION

This documents [% info.colon %] version [% info.version %]
corresponding to git commit L<[% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

This module provides a way of searching for CPAN modules whose name
may be misspelt. For example, if a user accidentally types
"Lingua::Stopwords" when looking for the module "Lingua::StopWords",
the common cpan clients will not be able to function:

    cpan Lingua::Stopwords

gives

    Warning: Cannot install Lingua::Stopwords, don't know what it is.
    Try the command

    i /Lingua::Stopwords/

    to find objects with matching identifiers.

and

    cpanm Lingua::Stopwords

gives

    ! Finding Lingua::Stopwords on cpanmetadb failed.
    ! Finding Lingua::Stopwords on search.cpan.org failed.
    ! Finding Lingua::Stopwords () on mirror http://www.cpan.org failed.
    ! Couldn't find module or a distribution Lingua::Stopwords ()

CPAN::Nearest supplies a spelling-mistake tolerant search for the most
similar name.

=head1 FUNCTIONS

=head2 search

    my $close_name = search ($file, $module_name);

Search the package detail file C<$file> for a module named
C<$module_name> and return the closest name. For example, if you
search for "Harry::Potter":

[% example("harry-potter") %]

The file specified by the first argument, C<$file> in the example, is
usually found at F<~/.cpan/sources/modules/02packages.details.txt.gz>
on a Unix-like system. See L</FILES> if you want to locate this
file. This may be specified as the file name. This module can read
either a compressed or uncompressed version.

=head1 EXPORTS

L</search> is exported on demand.

=head1 DEPENDENCIES

=over

=item L<Carp>

=item Text::Fuzzy

L<Text::Fuzzy> is used to do the searches of the CPAN data. See
L</HISTORY>.

=item Gzip::Faster

L<Gzip::Faster> is used to process compressed package files.

=back

=head1 SEE ALSO

=over

=item L<fatfinger>

This looks for similarly-named modules via
L<Text::Levenshtein::Damerau>.

=back

=head1 FILES

Users of the C<cpan> utility supplied with Perl may find the file
listing the CPAN modules in
F<~/.cpan/sources/modules/02packages.details.txt.gz>. Others can
download the file from the directory F</modules/> of any CPAN mirror. 

=head1 HISTORY

[% info.colon %] was created as a module for people making tools like
C<cpan>, C<cpanm>, C<pm-uninstall>, and anything else which needs to
use the CPAN packages list. It was inspired by the helpful "git"
version control system, which provides suggestions for spelling
mistakes. CPAN::Nearest was written to be fast enough for practical
use by writing it mostly in C with an XS binding to Perl.

It was the precursor of L<Text::Fuzzy> by the same author (Ben
Bullock). In version 0.13, all of the search functionality of
CPAN::Nearest was moved to Text::Fuzzy and the XS parts of the module
were removed, and the package-list reading part rewritten in Perl. The
standalone C program was also removed from the distribution in version
0.13, and its documentation was deleted in version 0.14.

[% INCLUDE "author" %]
